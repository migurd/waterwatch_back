-- +goose Up
-- +goose StatementBegin
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.address
(
    id bigserial,
    state character varying(255) NOT NULL,
    city character varying(255) NOT NULL,
    street character varying(255) NOT NULL,
    house_number character varying(255) NOT NULL,
    suburb character varying(255) NOT NULL,
    postal_code character varying(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigserial NOT NULL,
    address_id bigserial,
    email character varying(255) NOT NULL,
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (email, address_id)
);

CREATE TABLE IF NOT EXISTS public.account
(
    id bigserial,
    username character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    user_id bigserial NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (username),
    UNIQUE (user_id)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.phone_number
(
    id bigserial NOT NULL,
    account_id bigserial NOT NULL,
    phone_number character varying(12) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SAA"
(
    id bigserial NOT NULL,
    "SAA_type_id" bigserial NOT NULL,
    microncontroller_id bigserial NOT NULL,
    account_id bigserial,
    address_id bigserial,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SAA_type"
(
    id bigserial NOT NULL,
    name character varying NOT NULL,
    description character varying NOT NULL,
    capacity integer NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public."SAA_type"
    IS 'capacity is in mL';

CREATE TABLE IF NOT EXISTS public.maintenance
(
    id bigserial NOT NULL,
    "SAA_id" bigserial NOT NULL,
    details character varying(1023) NOT NULL,
    requested_date timestamp with time zone NOT NULL,
    done_date timestamp with time zone,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SAA_record"
(
    id bigserial NOT NULL,
    "SAA_id" bigserial NOT NULL,
    water_level double precision NOT NULL,
    "pH_level" double precision NOT NULL,
    is_contaminated boolean NOT NULL DEFAULT FALSE,
    date timestamp with time zone NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public."SAA_record"
    IS 'Water level is in percentage';

CREATE TABLE IF NOT EXISTS public.microcontroller
(
    id bigserial NOT NULL,
    serial_key character varying(23) NOT NULL,
    status boolean NOT NULL DEFAULT FALSE,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.account_security
(
    id bigserial,
    user_id bigserial NOT NULL,
    attempts integer NOT NULL,
    last_attempt timestamp with time zone NOT NULL,
    last_time_password_changed timestamp with time zone,
    PRIMARY KEY (id),
    UNIQUE (user_id)
);

ALTER TABLE IF EXISTS public."user"
    ADD FOREIGN KEY (address_id)
    REFERENCES public.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.account
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.phone_number
    ADD FOREIGN KEY (account_id)
    REFERENCES public.account (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SAA"
    ADD FOREIGN KEY (account_id)
    REFERENCES public.account (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SAA"
    ADD FOREIGN KEY ("SAA_type_id")
    REFERENCES public."SAA_type" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SAA"
    ADD FOREIGN KEY (microncontroller_id)
    REFERENCES public.microcontroller (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SAA"
    ADD FOREIGN KEY (address_id)
    REFERENCES public.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.maintenance
    ADD FOREIGN KEY ("SAA_id")
    REFERENCES public."SAA" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SAA_record"
    ADD FOREIGN KEY ("SAA_id")
    REFERENCES public."SAA" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.account_security
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
BEGIN;

DROP TABLE IF EXISTS public.account_security CASCADE;
DROP TABLE IF EXISTS public."SAA_record" CASCADE;
DROP TABLE IF EXISTS public.maintenance CASCADE;
DROP TABLE IF EXISTS public."SAA" CASCADE;
DROP TABLE IF EXISTS public."SAA_type" CASCADE;
DROP TABLE IF EXISTS public.microcontroller CASCADE;
DROP TABLE IF EXISTS public.phone_number CASCADE;
DROP TABLE IF EXISTS public.account CASCADE;
DROP TABLE IF EXISTS public."user" CASCADE;
DROP TABLE IF EXISTS public.address CASCADE;

END;
-- +goose StatementEnd
